services
  # A Docker web service
  - type web
    name webdis
    runtime docker
    repo httpsgithub.comrender-exampleswebdis.git # optional
    region oregon # optional (defaults to oregon)
    plan standard # optional (defaults to starter instance type)
    branch master # optional (defaults to master)
    rootDir webdis
    dockerCommand .webdis.sh # optional (defaults to Dockerfile command)
    numInstances 3 # optional (defaults to 1)
    healthCheckPath 
    envVars
      - key REDIS_HOST
        fromService
          type redis
          name lightning
          property host # available properties are listed below
      - key REDIS_PORT
        fromService
          type redis
          name lightning
          property port
      - fromGroup conc-settings
  # A private Minio instance
  - type pserv
    name minio
    runtime docker
    repo httpsgithub.comrender-examplesminio.git # optional
    envVars
    - key MINIO_ROOT_PASSWORD
      generateValue true # will generate a base64-encoded 256-bit secret
    - key MINIO_ROOT_USER
      sync false # placeholder for a value to be added in the dashboard
    - key PORT
      value 10000
    disk
      name data
      mountPath data
      sizeGB 10 # optional
  # A Ruby web service
  - type web
    name sinatra
    runtime ruby
    repo httpsgithub.comrenderincsinatra-example.git
    scaling
      minInstances 1
      maxInstances 3
      targetMemoryPercent 60 # optional if targetCPUPercent is set
      targetCPUPercent 60 # optional if targetMemory is set
    buildCommand bundle install
    startCommand bundle exec ruby main.rb
    preDeployCommand bundle exec ruby migrate.rb
    domains
      - test0.render.com
      - test1.render.com
    envVars
      - key STRIPE_API_KEY
        value Z2V0IG91dHRhIGhlcmUhCg
      - key DB_URL
        fromDatabase
          name elephant
          property connectionString
      - key MINIO_ROOT_PASSWORD
        fromService
          type pserv
          name minio
          envVarKey MINIO_ROOT_PASSWORD

    autoDeploy false # optional
  # A Python cron job that runs every hour
  - type cron
    name date
    runtime python
    schedule 0    
    buildCommand true # ensure it's a string
    startCommand date
    repo httpsgithub.comrender-examplesdocker.git # optional
  # A background worker that consumes a queue
  - type worker
    name queue
    runtime docker
    dockerfilePath .subDockerfile # optional
    dockerContext .subsrc # optional
    branch queue # optional
  # A static site
  - type web
    name my blog
    runtime static
    buildCommand yarn build
    staticPublishPath .build
    pullRequestPreviewsEnabled true # optional
    buildFilter
      paths
      - src.js
      ignoredPaths
      - src.test.js
    headers
      - path 
        name X-Frame-Options
        value sameorigin
    routes
      - type redirect
        source old
        destination new
      - type rewrite
        source a
        destination a
  # A Redis instance
  - type redis
    name lightning
    ipAllowList # required
      - source 0.0.0.00
        description everywhere
    plan free # optional (defaults to starter instance type)
    maxmemoryPolicy noeviction # optional (defaults to allkeys-lru)

databases
  - name elephant
    databaseName mydb # optional (Render may add a suffix)
    user adrian # optional
    ipAllowList # optional (defaults to allow all)
      - source 203.0.113.430
        description office
      - source 198.51.100.1
        description home

  - name private database
    databaseName private
    ipAllowList [] # only allow internal connections


envVarGroups
  - name conc-settings
    envVars
      - key CONCURRENCY
        value 2
      - key SECRET
        generateValue true
      - key USER_PROVIDED_SECRET
        sync false
  - name stripe
    envVars
      - key STRIPE_API_URL
        value httpsapi.stripe.comv2